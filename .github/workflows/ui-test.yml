name: UI Test

on:
  pull_request:
  push:
    branches: [main, develop]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'frappe' }}
    timeout-minutes: 60

    strategy:
      fail-fast: false

    name: UI Tests (Cypress)

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MARIADB_ROOT_PASSWORD: 123
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check for valid Python & Merge Conflicts
        run: |
          python -m compileall -q -f "${GITHUB_WORKSPACE}"
          if grep -lr --exclude-dir=node_modules "^<<<<<<< " "${GITHUB_WORKSPACE}"
              then echo "Found merge conflicts"
              exit 1
          fi

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Add to Hosts
        run: |
          echo "127.0.0.1 gameplan.test" | sudo tee -a /etc/hosts

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress

      - name: Install Dependencies
        run: |
          bash ${GITHUB_WORKSPACE}/.github/helper/install_dependencies.sh
          bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
        env:
          BEFORE: ${{ env.GITHUB_EVENT_PATH.before }}
          AFTER: ${{ env.GITHUB_EVENT_PATH.after }}

      - name: Site Setup
        run: |
          cd ~/frappe-bench/
          bench --site gameplan.test execute frappe.utils.install.complete_setup_wizard
          bench --site gameplan.test execute frappe.tests.ui_test_helpers.create_test_user


      - name: UI Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          record: true
          key: 9c23c39a-b56b-46d5-b673-44faf1f1da83
        env:
          CYPRESS_BASE_URL: http://gameplan.test:8000
          CYPRESS_RECORD_KEY: 9c23c39a-b56b-46d5-b673-44faf1f1da83

      - name: Stop server
        run: |
          ps -ef | grep "[f]rappe serve" | awk '{print $2}' | xargs kill -s SIGINT
          sleep 5

      - name: Show bench output
        if: ${{ always() }}
        run: cat ~/frappe-bench/bench_start.log || true
